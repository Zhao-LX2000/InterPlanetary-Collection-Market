version: "3.7"

networks:
  IPCM_net:
    driver: bridge
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24

services:
  # MySQL
  mysql:
    container_name: mysql-IPCM
    image: mysql:latest
    volumes:
      - ./pkg/configs/sql:/docker-entrypoint-initdb.d
    ports:
      - "7712:3306"
    environment:
      - MYSQL_DATABASE=gorm
      - MYSQL_USER=gorm
      - MYSQL_PASSWORD=1119
      - MYSQL_RANDOM_ROOT_PASSWORD="yes"

  # ETCD
  Etcd:
    container_name: etcd-IPCM
    image: 'bitnami/etcd:latest'
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - "2379:2379"
      - "2380:2380"


  #redis容器 - Redis container
  redis:
    image: redis:6.2.5
    container_name: redis-IPCM
    ports:
      - "36379:6379"
    environment:
      # 时区上海 - Time zone Shanghai (Change if needed)
      TZ: Asia/Shanghai
    volumes:
      # 数据文件 - data files
      - ./deploy/data/redis/data:/data:rw
    command: "redis-server --requirepass G62m50oigInC30sf  --appendonly yes"
    privileged: true
    restart: always
    networks:
      - IPCM_net

  #asynqmon asynq延迟队列、定时队列的webui - Asynqmon asynq delay queue, timing queue's webUI
  asynqmon:
    image: hibiken/asynqmon:latest
    container_name: asynqmon-IPCM
    ports:
      - "8980:8080"
    command:
      - '--redis-addr=redis:6379'
      - '--redis-password=G62m50oigInC30sf'
    restart: always
    networks:
      - IPCM_net
    depends_on:
      - redis

#  ipfs:
#    image: ipfs/go-ipfs
#    restart: unless-stopped
#    ports:
#      - 4001:4001
#      - 5001:5001
#      - 6001:8080
#      - 6002:8081
#    volumes:
#      - ./deploy/data/ipfs/staging:/export
#      - ./deploy/data/ipfs/data:/data/ipfs
#    networks:
#      - default
#
#  #zookeeper是kafka的依赖 - Zookeeper is the dependencies of Kafka
#  zookeeper:
#    image: wurstmeister/zookeeper
#    container_name: zookeeper-IPCM
#    environment:
#      # 时区上海 - Time zone Shanghai (Change if needed)
#      TZ: Asia/Shanghai
#    restart: always
#    ports:
#      - "2181:2181"
#    networks:
#      - IPCM_net
#
#  #消息队列 - Message queue
#  kafka:
#    image: wurstmeister/kafka
#    container_name: kafka-IPCM
#    ports:
#      - "9092:9092"
#    environment:
#      - KAFKA_ADVERTISED_HOST_NAME=kafka
#      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
#      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false
#      - TZ=Asia/Shanghai
#    restart: always
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    networks:
#      - IPCM_net
#    depends_on:
#      - zookeeper

#  # Collector
#  otel-collector:
#    container_name: otel-IPCM
#    image: otel/opentelemetry-collector-contrib-dev:latest
#    command: [ "--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}" ]
#    volumes:
#      - ./pkg/configs/otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
#    ports:
#      - "1888:1888"   # pprof extension
#      - "8888"        # Prometheus metrics exposed by the collector
#      - "8889:8889"   # Prometheus exporter metrics
#      - "13133:13133" # health_check extension
#      - "4317:4317"   # OTLP gRPC receiver
#      - "55679"       # zpages extension
#    depends_on:
#      - jaeger-all-in-one
#
#  # Jaeger
#  jaeger-all-in-one:
#    container_name: jaeger-IPCM
#    image: jaegertracing/all-in-one:latest
#    environment:
#      - COLLECTOR_OTLP_ENABLED=true
#    ports:
#      - "16686:16686"
#      - "14268"
#      - "14250:14250"
#      - "6831:6831"
#
#  # Victoriametrics
#  victoriametrics:
#    container_name: victoriametrics-IPCM
#    image: victoriametrics/victoria-metrics
#    ports:
#      - "8428:8428"
#      - "8089:8089"
#      - "8089:8089/udp"
#      - "2003:2003"
#      - "2003:2003/udp"
#      - "4242:4242"
#    command:
#      - '--storageDataPath=/storage'
#      - '--graphiteListenAddr=:2003'
#      - '--opentsdbListenAddr=:4242'
#      - '--httpListenAddr=:8428'
#      - '--influxListenAddr=:8089'
#    restart: always
#
#  # Grafana
#  grafana:
#    container_name: grafana-IPCM
#    image: grafana/grafana:latest
#    environment:
#      - GF_AUTH_ANONYMOUS_ENABLED=true
#      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
#      - GF_AUTH_DISABLE_LOGIN_FORM=true
#    ports:
#      - "3000:3000"
